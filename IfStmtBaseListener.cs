//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Lakshmi\otbo-master\otbo\CMS\CMS_Desktop_Client\CMS_Desktop_Client\IfStmt.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace OTBO_RuleEngine
{

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IIfStmtListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
//[System.CLSCompliant(false)]
public partial class IfStmtBaseListener : IIfStmtListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.notExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpr([NotNull] AbstractIfStmtParser.NotExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.notExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpr([NotNull] AbstractIfStmtParser.NotExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.unaryMinusExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryMinusExpr([NotNull] AbstractIfStmtParser.UnaryMinusExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.unaryMinusExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryMinusExpr([NotNull] AbstractIfStmtParser.UnaryMinusExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.multiplicationExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationExpr([NotNull] AbstractIfStmtParser.MultiplicationExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.multiplicationExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationExpr([NotNull] AbstractIfStmtParser.MultiplicationExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] AbstractIfStmtParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] AbstractIfStmtParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.atomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomExpr([NotNull] AbstractIfStmtParser.AtomExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.atomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomExpr([NotNull] AbstractIfStmtParser.AtomExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpr([NotNull] AbstractIfStmtParser.AdditiveExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.additiveExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpr([NotNull] AbstractIfStmtParser.AdditiveExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] AbstractIfStmtParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] AbstractIfStmtParser.RelationalExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpr([NotNull] AbstractIfStmtParser.EqualityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpr([NotNull] AbstractIfStmtParser.EqualityExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] AbstractIfStmtParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] AbstractIfStmtParser.AndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.parExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParExpr([NotNull] AbstractIfStmtParser.ParExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.parExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParExpr([NotNull] AbstractIfStmtParser.ParExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.booleanAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanAtom([NotNull] AbstractIfStmtParser.BooleanAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.booleanAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanAtom([NotNull] AbstractIfStmtParser.BooleanAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.idAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdAtom([NotNull] AbstractIfStmtParser.IdAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.idAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdAtom([NotNull] AbstractIfStmtParser.IdAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.stringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringAtom([NotNull] AbstractIfStmtParser.StringAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.stringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringAtom([NotNull] AbstractIfStmtParser.StringAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.nilAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNilAtom([NotNull] AbstractIfStmtParser.NilAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.nilAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNilAtom([NotNull] AbstractIfStmtParser.NilAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.numberAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberAtom([NotNull] AbstractIfStmtParser.NumberAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.numberAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberAtom([NotNull] AbstractIfStmtParser.NumberAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] AbstractIfStmtParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] AbstractIfStmtParser.ParseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] AbstractIfStmtParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] AbstractIfStmtParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat([NotNull] AbstractIfStmtParser.StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat([NotNull] AbstractIfStmtParser.StatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] AbstractIfStmtParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] AbstractIfStmtParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.if_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_stat([NotNull] AbstractIfStmtParser.If_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.if_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_stat([NotNull] AbstractIfStmtParser.If_statContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.condition_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_block([NotNull] AbstractIfStmtParser.Condition_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.condition_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_block([NotNull] AbstractIfStmtParser.Condition_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.stat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat_block([NotNull] AbstractIfStmtParser.Stat_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.stat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat_block([NotNull] AbstractIfStmtParser.Stat_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] AbstractIfStmtParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] AbstractIfStmtParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="AbstractIfStmtParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] AbstractIfStmtParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbstractIfStmtParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] AbstractIfStmtParser.AtomContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace MyProject.Folder
