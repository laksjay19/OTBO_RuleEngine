//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Lakshmi\otbo-master\otbo\CMS\CMS_Desktop_Client\CMS_Desktop_Client\IfStmt.g4 by ANTLR 4.5-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace OTBO_RuleEngine {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AbstractIfStmtParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5-SNAPSHOT")]
//[System.CLSCompliant(false)]
public interface IIfStmtVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] AbstractIfStmtParser.NotExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unaryMinusExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpr([NotNull] AbstractIfStmtParser.UnaryMinusExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpr([NotNull] AbstractIfStmtParser.MultiplicationExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] AbstractIfStmtParser.OrExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>atomExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomExpr([NotNull] AbstractIfStmtParser.AtomExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] AbstractIfStmtParser.AdditiveExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>relationalExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpr([NotNull] AbstractIfStmtParser.RelationalExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpr([NotNull] AbstractIfStmtParser.EqualityExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] AbstractIfStmtParser.AndExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parExpr</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpr([NotNull] AbstractIfStmtParser.ParExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>booleanAtom</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanAtom([NotNull] AbstractIfStmtParser.BooleanAtomContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>idAtom</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdAtom([NotNull] AbstractIfStmtParser.IdAtomContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringAtom</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringAtom([NotNull] AbstractIfStmtParser.StringAtomContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nilAtom</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNilAtom([NotNull] AbstractIfStmtParser.NilAtomContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numberAtom</c>
	/// labeled alternative in <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberAtom([NotNull] AbstractIfStmtParser.NumberAtomContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParse([NotNull] AbstractIfStmtParser.ParseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AbstractIfStmtParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] AbstractIfStmtParser.StatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] AbstractIfStmtParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.if_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_stat([NotNull] AbstractIfStmtParser.If_statContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.condition_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition_block([NotNull] AbstractIfStmtParser.Condition_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.stat_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat_block([NotNull] AbstractIfStmtParser.Stat_blockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] AbstractIfStmtParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractIfStmtParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] AbstractIfStmtParser.AtomContext context);
}
} // namespace MyProject.Folder
